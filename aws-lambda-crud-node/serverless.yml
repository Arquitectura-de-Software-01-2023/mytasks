service: aws-lambda-crud-node # Nombre del servicio
frameworkVersion: '3' # Version del framework

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1 # Region de AWS
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:* # Permisos para acceder a DynamoDB
      Resource: "arn:aws:dynamodb:us-east-1:466906930597:table/TaskTable"

functions:
  api:
    handler: src/index.handler # Nombre del archivo y la funcion
    events:
      - httpApi:
          path: /
          method: get
  # Funcion para crear una tarea
  createTask:
    handler: src/addTask.addTask
    events:
      - httpApi:
          path: /task
          method: post
          cors:
            origin: '*'
  # Funcion para obtener todas las tareas
  getTasks:
    handler: src/getTasks.getTasks
    events:
      - httpApi:
          path: /task
          method: get
          cors:
            origin: '*'
  # Funcion para obtener una tarea por id
  getTask:
    handler: src/getTask.getTask
    events:
      - httpApi:
          path: /task/{id}
          method: get
          cors:
            origin: '*'
  # Funcion para actualizar una tarea
  updateTask:
    handler: src/updateTask.updateTask
    events:
      - httpApi:
          path: /task/{id}
          method: put
          cors:
            origin: '*'
  # Funcion para eliminar una tarea
  deleteTask:
    handler: src/deleteTask.deleteTask
    events:
      - httpApi:
          path: /task/{id}
          method: delete
          cors:
            origin: '*'

resources:
  Resources:
    TaskTable: # Nombre de la tabla
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TaskTable # Nombre de la tabla
        BillingMode: PAY_PER_REQUEST # Modo de pago
        AttributeDefinitions: # Definicion de atributos
          - AttributeName: id
            AttributeType: S
        KeySchema: # Definicion de llave
          - AttributeName: id
            KeyType: HASH